function mutate(c){if(0.1>random(1)){let d=randomGaussian(0,0.1);return c+d}return c}class Bird{constructor(c,d=!0){this.y=height/2,this.x=64,this.r=12,this.gravity=0.7,this.lift=-16,this.velocity=0,c instanceof NeuralNetwork?(this.brain=c.copy(),d&&this.brain.mutate(mutate)):this.brain=new NeuralNetwork(5,18,2),this.score=0,this.fitness=0}copy(){return new Bird(this.brain)}show(){fill(255,100),stroke(255),ellipse(this.x,this.y,2*this.r,2*this.r)}think(c){let d=null,e=Infinity;for(let g,f=0;f<c.length;f++)g=c[f].x+c[f].w-this.x,0<g&&g<e&&(e=g,d=c[f]);if(null!=d){let f=[];f[0]=this.y/height,f[1]=d.top/height,f[2]=d.bottom/height,f[3]=d.x/width,f[4]=this.velocity/10;let g=this.brain.predict(f);g[1]>g[0]&&this.up()}}up(){this.velocity+=this.lift}bottomTop(){return this.y>height||0>this.y}update(){this.velocity+=this.gravity,this.y+=this.velocity,this.score++}}let birds=[],bestBirds=[],savedBirds=[];var pipes=[];let counter=0,sliderSpeed,sliderSpacing,sliderPopulation,bestScoreText,generationNumText,spacingValueText,speedOfGameText,PopulationText,resetBestScoreButton,BESTSCORE=0,GENERATION_NUM=1,TOTAL=500;function setup(){var c=createCanvas(800,600);c.parent("flappyBird"),sliderSpeed=createSlider(1,100,1),sliderSpeed.parent("sliderSpeed"),sliderSpacing=createSlider(75,200,150),sliderSpacing.parent("sliderSpacing"),sliderPopulation=createSlider(1,1500,500),sliderPopulation.parent("sliderPopulation"),bestScoreText=createP(),bestScoreText.parent("bestScoreText"),generationNumText=createP(),generationNumText.parent("generationNumText"),generationNumText.elt.textContent="Generation : "+GENERATION_NUM,spacingValueText=createP(),spacingValueText.parent("spacingValueText"),speedOfGameText=createP(),speedOfGameText.parent("speedOfGameText"),speedOfGameText.elt.textContent="Speed of game : ",PopulationText=createP(),PopulationText.parent("PopulationText"),resetBestScoreButton=createButton("Reset"),resetBestScoreButton.parent("resetBestScoreButton"),resetBestScoreButton.mousePressed(function(){BESTSCORE=0});for(let d=0;d<TOTAL;d++)birds[d]=new Bird}function draw(){for(let d=0;d<sliderSpeed.value();d++){0==counter%75&&pipes.push(new Pipe(sliderSpacing.value())),counter++;for(var c=pipes.length-1;0<=c;c--){pipes[c].update(),pipes[c].offscreen()&&pipes.splice(c,1);for(let e=birds.length-1;0<=e;e--)birds[0].score>BESTSCORE&&(BESTSCORE=birds[0].score,bestScoreText.elt.textContent="Best score : "+BESTSCORE),(pipes[c].hits(birds[e])||birds[e].bottomTop())&&savedBirds.push(birds.splice(e,1)[0])}for(let e of birds)e.think(pipes),e.update();0===birds.length&&(nextGeneration(),generationNumText.elt.textContent="Generation : "+GENERATION_NUM,counter=0,pipes=[])}background(0),spacingValueText.elt.textContent="Spacing : "+sliderSpacing.value(),TOTAL=sliderPopulation.value(),PopulationText.elt.textContent="Population : "+TOTAL;for(let d of birds)d.show();for(let d of pipes)d.show()}function nextGeneration(){GENERATION_NUM++,calculateFitness(),pickBest(0.02),normalizeFitnessBest(),birds[0]=new Bird(bestBirds[0].brain,!1);for(let c=1;c<TOTAL;c++)birds[c]=pickOne();savedBirds.splice(0,savedBirds.length)}function pickOne(){for(var c=0,d=random(1);0<d;)d-=bestBirds[c].fitness,c+=1;c--;let e=bestBirds[c],f=new Bird(e.brain);return f}function pickBest(c){savedBirds.sort(compareByFitness);let d=c*TOTAL;for(let e=0;e<d;e++)bestBirds[e]=savedBirds[e]}function normalizeFitnessBest(){let c=0;for(let d of bestBirds)c+=d.score;for(let d of bestBirds)d.fitness=d.score/c}function calculateFitness(){let c=0;for(let d of savedBirds)c+=d.score,BESTSCORE<d.score&&(BESTSCORE=d.score);for(let d of savedBirds)d.fitness=d.score/c}function compareByFitness(c,d){return c.score<d.fitness?-1:c.score>d.fitness?1:0}class Pipe{constructor(c){let d=c,e=random(d,height-d);this.top=e-d/2,this.bottom=height-(e+d/2),this.x=width,this.w=80,this.speed=6}hits(c){return(c.y-c.r<this.top||c.y+c.r>height-this.bottom)&&c.x>this.x&&c.x<this.x+this.w}show(){stroke(255),fill(200),rect(this.x,0,this.w,this.top),rect(this.x,height-this.bottom,this.w,this.bottom)}update(){this.x-=this.speed}offscreen(){return this.x<-this.w}}